{"ast":null,"code":"var _jsxFileName = \"/Users/anuragsingh/Desktop/interbase/client/src/components/InterviewCard2.js\";\nimport React from 'react';\nimport '../assets/css/InterviewCard2.css';\n\nclass InterviewCard2 extends React.Component {\n  constructor() {\n    super();\n\n    this.getStudentsInAcompany = async company => {\n      let getStudents = await fetch('/company/students', {\n        method: 'post',\n        body: JSON.stringify({\n          company\n        }),\n        headers: {\n          'content-type': 'application/json'\n        }\n      });\n      let res = await getStudents.json();\n      let notattemped = [];\n      let failed = [];\n      let passed = [];\n      let onhold = [];\n\n      for (let i = 0; i < res.data.length; i++) {\n        const cur = res.data[i];\n\n        for (let j = 0; j < cur.notattempted.length; j++) {\n          notattemped.push(cur.notattempted[j]);\n        }\n\n        for (let j = 0; j < cur.passed.length; j++) {\n          passed.push(cur.passed[j]);\n        }\n\n        for (let j = 0; j < cur.failed.length; j++) {\n          failed.push(cur.failed[j]);\n        }\n\n        for (let j = 0; j < cur.onhold.length; j++) {\n          onhold.push(cur.onhold[j]);\n        }\n      }\n\n      this.setState({\n        passed,\n        failed,\n        notattemped,\n        onhold\n      });\n      return {\n        notattemped,\n        failed,\n        passed,\n        onhold\n      };\n    };\n\n    this.state = {\n      passed: [],\n      failed: [],\n      onhold: [],\n      notattemped: []\n    };\n  }\n\n  componentDidMount() {\n    const {\n      interview\n    } = this.props;\n    this.getStudentsInAcompany(interview.company);\n  }\n\n  render() {\n    const {\n      assignInt,\n      interview,\n      students\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"interview-card2\",\n      onClick: () => this.getStudentsInAcompany(interview.company),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inter-company ic-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"smallText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, \"Company\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"boldText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, interview.company)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inter-placed ic-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"smallText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, \"Placed/total\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"boldText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"25/50\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inter-date ic-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"smallText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, interview.date)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"student-list-interview\",\n      id: \"stud-list-\" + interview._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, \" Students appearing for \", interview.company, \" :\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"students-already-assigned\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, this.state.failed.map((student, id) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 72\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 85\n      }\n    }, id + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 102\n      }\n    }, student.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 125\n      }\n    }, student.college), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 151\n      }\n    }, student.batch), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 175\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => assignInt(interview._id, student._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 179\n      }\n    }, \"Assign\")))))), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 29\n      }\n    }, this.state.notattemped.map((student, id) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 90\n      }\n    }, id + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 107\n      }\n    }, student.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 130\n      }\n    }, student.college), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 156\n      }\n    }, student.batch), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 180\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => assignInt(interview._id, student._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 184\n      }\n    }, \"Assign\")))))), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }, this.state.onhold.map((student, id) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 72\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 85\n      }\n    }, id + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 102\n      }\n    }, student.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 125\n      }\n    }, student.college), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 151\n      }\n    }, student.batch), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 175\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => assignInt(interview._id, student._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 179\n      }\n    }, \"Assign\")))))), /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    }, this.state.passed.map((student, id) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 72\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 85\n      }\n    }, id + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 102\n      }\n    }, student.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 125\n      }\n    }, student.college), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 151\n      }\n    }, student.batch), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 175\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => assignInt(interview._id, student._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 179\n      }\n    }, \"Assign\"))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"studentListToAssign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 37\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 37\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 37\n      }\n    }, \"College\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 37\n      }\n    }, \"Course\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 37\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }, students.map((student, id) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 62\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 75\n      }\n    }, id + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 92\n      }\n    }, student.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 115\n      }\n    }, student.college), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 141\n      }\n    }, student.batch), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 165\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => assignInt(interview._id, student._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 169\n      }\n    }, \"Assign\")))))))));\n  }\n\n}\n\nexport default InterviewCard2;","map":{"version":3,"sources":["/Users/anuragsingh/Desktop/interbase/client/src/components/InterviewCard2.js"],"names":["React","InterviewCard2","Component","constructor","getStudentsInAcompany","company","getStudents","fetch","method","body","JSON","stringify","headers","res","json","notattemped","failed","passed","onhold","i","data","length","cur","j","notattempted","push","setState","state","componentDidMount","interview","props","render","assignInt","students","display","width","date","_id","map","student","id","name","college","batch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../assets/css/InterviewCard2.css'\nclass InterviewCard2 extends React.Component {\n    constructor(){\n        super();\n        this.state={\n            passed:[],\n            failed:[],\n            onhold:[],\n            notattemped:[]\n        }\n    }\n    getStudentsInAcompany = async (company) => {\n        let getStudents = await fetch('/company/students', {\n            method: 'post',\n            body: JSON.stringify({\n                company\n            }),\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n        let res = await getStudents.json();\n        let notattemped = [];\n        let failed = [];\n        let passed = [];\n        let onhold = [];\n\n        for (let i = 0; i < res.data.length; i++) {\n            const cur = res.data[i];\n            for (let j = 0; j < cur.notattempted.length; j++) {\n                notattemped.push(cur.notattempted[j]);\n            }\n            for (let j = 0; j < cur.passed.length; j++) {\n                passed.push(cur.passed[j]);\n            }\n            for (let j = 0; j < cur.failed.length; j++) {\n                failed.push(cur.failed[j]);\n            }\n            for (let j = 0; j < cur.onhold.length; j++) {\n                onhold.push(cur.onhold[j]);\n            }\n        }\n        this.setState({\n            passed,\n            failed,\n            notattemped,\n            onhold\n        })\n        return { notattemped, failed, passed, onhold };\n    }\n\n    componentDidMount(){\n        const{interview}=this.props;\n        this.getStudentsInAcompany(interview.company);\n    }\n\n    render() {\n        const { assignInt ,interview, students } = this.props;\n        return (\n            <div className=\"interview-card2\" onClick={()=>this.getStudentsInAcompany(interview.company)}>\n                <div style={{ display: 'flex', width: '100%' }}>\n                    <div className=\"inter-company ic-2\">\n                        <span className=\"smallText\">\n                            Company\n                    </span><br></br>\n                        <span className=\"boldText\">\n                            {interview.company}\n                        </span>\n                    </div>\n                    <div className='inter-placed ic-2'>\n                        <span className=\"smallText\">\n                            Placed/total\n                    </span><br></br>\n                        <span className=\"boldText\">\n                            25/50\n                    </span>\n                    </div>\n                    <div className=\"inter-date ic-2\">\n                        <span className=\"smallText\">\n                            Date\n                    </span><br></br>\n                        <span className=\"\">\n                            <b>{interview.date}</b>\n                        </span>\n                    </div>\n                </div>\n\n                <div className=\"student-list-interview\" id={\"stud-list-\" + interview._id}>\n                    <center> Students appearing for {interview.company} :</center>\n                    <div className=\"students-already-assigned\">\n                    <table >\n                            <tbody>\n                                { this.state.failed.map((student, id)=><tr key={id}><td>{id + 1}</td><td>{student.name}</td><td>{student.college}</td><td>{student.batch}</td><td><button onClick={()=>assignInt(interview._id , student._id)} >Assign</button></td></tr>)}\n                            </tbody>\n                        </table>\n                        <table >\n                            <tbody>\n                                { this.state.notattemped.map((student, id)=><tr key={id}><td>{id + 1}</td><td>{student.name}</td><td>{student.college}</td><td>{student.batch}</td><td><button onClick={()=>assignInt(interview._id , student._id)} >Assign</button></td></tr>)}\n                            </tbody>\n                        </table>\n                        <table >\n                            <tbody>\n                                { this.state.onhold.map((student, id)=><tr key={id}><td>{id + 1}</td><td>{student.name}</td><td>{student.college}</td><td>{student.batch}</td><td><button onClick={()=>assignInt(interview._id , student._id)} >Assign</button></td></tr>)}\n                            </tbody>\n                        </table>\n                        <table >\n                            <tbody>\n                                { this.state.passed.map((student, id)=><tr key={id}><td>{id + 1}</td><td>{student.name}</td><td>{student.college}</td><td>{student.batch}</td><td><button onClick={()=>assignInt(interview._id , student._id)} >Assign</button></td></tr>)}\n                            </tbody>\n                        </table>\n                    </div>\n                    <div className=\"studentListToAssign\">\n                        <table >\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Name</th>\n                                    <th>College</th>\n                                    <th>Course</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {students.map((student, id)=><tr key={id}><td>{id + 1}</td><td>{student.name}</td><td>{student.college}</td><td>{student.batch}</td><td><button onClick={()=>assignInt(interview._id , student._id)} >Assign</button></td></tr>)}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default InterviewCard2;"]},"metadata":{},"sourceType":"module"}