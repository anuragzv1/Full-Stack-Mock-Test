{"ast":null,"code":"var _jsxFileName = \"/Users/anuragsingh/Desktop/interbase/client/src/components/InterviewCard2.js\";\nimport React from 'react';\nimport '../assets/css/InterviewCard2.css';\n\nclass InterviewCard2 extends React.Component {\n  constructor() {\n    super();\n\n    this.assignInt = async (interview_id, student_id) => {\n      console.log('Assinging' + interview_id + 'to' + student_id);\n      let assignInterview = fetch('/interviews/addstudent', {\n        method: 'post',\n        body: JSON.stringify({\n          interview_id,\n          student_id\n        }),\n        headers: {\n          'content-type': 'application/json'\n        }\n      }); // this.notify('success', 'Interview Assigned');\n      // this.getInterviews();\n    };\n\n    this.getStudentsInAcompany = async company => {\n      let getStudents = await fetch('/company/students', {\n        method: 'post',\n        body: JSON.stringify({\n          company\n        }),\n        headers: {\n          'content-type': 'application/json'\n        }\n      });\n      let res = await getStudents.json();\n      let notattemped = [];\n      let failed = [];\n      let passed = [];\n      let onhold = [];\n\n      for (let i = 0; i < res.data.length; i++) {\n        const cur = res.data[i];\n\n        for (let j = 0; j < cur.notattempted.length; j++) {\n          notattemped.push(cur.notattempted[j]);\n        }\n\n        for (let j = 0; j < cur.passed.length; j++) {\n          passed.push(cur.passed[j]);\n        }\n\n        for (let j = 0; j < cur.failed.length; j++) {\n          failed.push(cur.failed[j]);\n        }\n\n        for (let j = 0; j < cur.onhold.length; j++) {\n          onhold.push(cur.onhold[j]);\n        }\n      }\n\n      this.setState({\n        notattemped,\n        failed,\n        passed,\n        onhold\n      }, () => {\n        console.log('Sate updated', this.state);\n      });\n    };\n\n    this.handleStatusChange = async (student_id, interview_id, oldstate) => {\n      const {\n        interview\n      } = this.props;\n      const {\n        changeIntState\n      } = this.props;\n      let e = document.getElementById(\"select-\" + oldstate + \"-\" + interview_id + student_id);\n      var newState = e.options[e.selectedIndex].value;\n      changeIntState(student_id, interview_id, oldstate, newState);\n      this.getStudentsInAcompany(interview.company);\n    };\n\n    this.showStudentList = id => {\n      document.getElementById(\"std-list-assign-\" + id).style.display = \"flex\";\n    };\n\n    this.state = {\n      passed: [],\n      failed: [],\n      onhold: [],\n      notattemped: []\n    };\n  } //this function assigns a student's interview to a company\n\n\n  async componentDidMount() {\n    const {\n      interview\n    } = this.props;\n    this.getStudentsInAcompany(interview.company);\n  }\n\n  render() {\n    const {\n      assignInt,\n      interview,\n      students\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"interview-card2\",\n      onClick: () => document.getElementById(\"stud-list-\" + interview._id).style.display = \"block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inter-company ic-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"smallText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, \"Company\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"boldText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }\n    }, interview.company)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inter-placed ic-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"smallText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }, \"Placed/total\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"boldText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    }, this.state.passed && this.state.passed.length + \"/\" + (this.state.failed.length + this.state.passed.length + this.state.onhold.length + this.state.notattemped.length))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inter-date ic-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"smallText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 28\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 29\n      }\n    }, interview.date)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"student-list-interview\",\n      id: \"stud-list-\" + interview._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \" Students assigned to \", interview.company, \" :\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"students-already-assigned\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }, this.state.failed && this.state.failed.map((student, id) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 94\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 107\n      }\n    }, student.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 130\n      }\n    }, student.college), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 156\n      }\n    }, student.batch), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 180\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"select-failed-\" + interview._id + student._id,\n      onChange: () => this.handleStatusChange(student._id, interview._id, 'failed'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"passed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 41\n      }\n    }, \"PASSED\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"failed\",\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 41\n      }\n    }, \"FAILED\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"not_attempted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 41\n      }\n    }, \"NOT_ATTEMPTED\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"onhold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 41\n      }\n    }, \"ONHOLD\"))))), this.state.notattemped && this.state.notattemped.map((student, id) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 104\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 117\n      }\n    }, student.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 140\n      }\n    }, student.college), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 166\n      }\n    }, student.batch), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 190\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"select-not_attempted-\" + interview._id + student._id,\n      onChange: () => this.handleStatusChange(student._id, interview._id, 'not_attempted'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"passed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 41\n      }\n    }, \"PASSED\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"failed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 41\n      }\n    }, \"FAILED\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"not_attempted\",\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 41\n      }\n    }, \"NOT_ATTEMPTED\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"onhold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 41\n      }\n    }, \"ONHOLD\"))))), this.state.onhold && this.state.onhold.map((student, id) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 94\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 107\n      }\n    }, student.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 130\n      }\n    }, student.college), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 156\n      }\n    }, student.batch), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 180\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"select-onhold-\" + interview._id + student._id,\n      onChange: () => this.handleStatusChange(student._id, interview._id, 'onhold'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"passed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 41\n      }\n    }, \"PASSED\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"failed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 41\n      }\n    }, \"FAILED\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"not_attempted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 41\n      }\n    }, \"NOT_ATTEMPTED\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"onhold\",\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 41\n      }\n    }, \"ONHOLD\"))))), this.state.passed && this.state.passed.map((student, id) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 94\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 107\n      }\n    }, student.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 130\n      }\n    }, student.college), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 156\n      }\n    }, student.batch), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 180\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"select-passed-\" + interview._id + student._id,\n      onChange: () => this.handleStatusChange(student._id, interview._id, 'passed'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"passed\",\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 41\n      }\n    }, \"PASSED\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"failed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 41\n      }\n    }, \"FAILED\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"not_attempted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 41\n      }\n    }, \"NOT_ATTEMPTED\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"onhold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 41\n      }\n    }, \"ONHOLD\"))))))), /*#__PURE__*/React.createElement(\"center\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.showStudentList(interview._id),\n      className: \"newAssignBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 33\n      }\n    }, \"Assign Students\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"studentListToAssign\",\n      id: 'std-list-assign-' + interview._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 37\n      }\n    }, \"#\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 37\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 37\n      }\n    }, \"College\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 37\n      }\n    }, \"Course\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 37\n      }\n    }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 29\n      }\n    }, students.map((student, id) => /*#__PURE__*/React.createElement(\"tr\", {\n      key: id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 64\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 77\n      }\n    }, id + 1), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 94\n      }\n    }, student.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 117\n      }\n    }, student.college), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 143\n      }\n    }, student.batch), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 167\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.assignInt(interview._id, student._id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 171\n      }\n    }, \"Assign\")))))))));\n  }\n\n}\n\nexport default InterviewCard2;","map":{"version":3,"sources":["/Users/anuragsingh/Desktop/interbase/client/src/components/InterviewCard2.js"],"names":["React","InterviewCard2","Component","constructor","assignInt","interview_id","student_id","console","log","assignInterview","fetch","method","body","JSON","stringify","headers","getStudentsInAcompany","company","getStudents","res","json","notattemped","failed","passed","onhold","i","data","length","cur","j","notattempted","push","setState","state","handleStatusChange","oldstate","interview","props","changeIntState","e","document","getElementById","newState","options","selectedIndex","value","showStudentList","id","style","display","componentDidMount","render","students","_id","width","date","map","student","name","college","batch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../assets/css/InterviewCard2.css'\nclass InterviewCard2 extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            passed: [],\n            failed: [],\n            onhold: [],\n            notattemped: []\n        }\n    }\n\n    //this function assigns a student's interview to a company\n    assignInt = async (interview_id, student_id) => {\n        console.log('Assinging' + interview_id + 'to' + student_id);\n        let assignInterview = fetch('/interviews/addstudent', {\n            method: 'post',\n            body: JSON.stringify({\n                interview_id,\n                student_id\n            }),\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n        // this.notify('success', 'Interview Assigned');\n        // this.getInterviews();\n    }\n    getStudentsInAcompany = async (company) => {\n        let getStudents = await fetch('/company/students', {\n            method: 'post',\n            body: JSON.stringify({\n                company\n            }),\n            headers: {\n                'content-type': 'application/json'\n            }\n        })\n        let res = await getStudents.json();\n        let notattemped = [];\n        let failed = [];\n        let passed = [];\n        let onhold = [];\n\n        for (let i = 0; i < res.data.length; i++) {\n            const cur = res.data[i];\n            for (let j = 0; j < cur.notattempted.length; j++) {\n                notattemped.push(cur.notattempted[j]);\n            }\n            for (let j = 0; j < cur.passed.length; j++) {\n                passed.push(cur.passed[j]);\n            }\n            for (let j = 0; j < cur.failed.length; j++) {\n                failed.push(cur.failed[j]);\n            }\n            for (let j = 0; j < cur.onhold.length; j++) {\n                onhold.push(cur.onhold[j]);\n            }\n        }\n        this.setState({\n            notattemped,\n            failed,\n            passed,\n            onhold\n        }, () => {\n            console.log('Sate updated', this.state);\n        })\n    }\n\n\n    async componentDidMount() {\n        const { interview } = this.props;\n        this.getStudentsInAcompany(interview.company);\n    }\n\n    handleStatusChange = async (student_id, interview_id, oldstate) => {\n        const { interview } = this.props;\n        const { changeIntState } = this.props;\n        let e = document.getElementById(\"select-\" + oldstate + \"-\" + interview_id + student_id);\n        var newState = e.options[e.selectedIndex].value;\n        changeIntState(student_id, interview_id, oldstate, newState);\n        this.getStudentsInAcompany(interview.company);\n    }\n\n    showStudentList = (id) => {\n        document.getElementById(\"std-list-assign-\" + id).style.display = \"flex\";\n    }\n    render() {\n        const { assignInt, interview, students } = this.props;\n        return (\n            <div className=\"interview-card2\" onClick={() => document.getElementById(\"stud-list-\" + interview._id).style.display = \"block\"}>\n                <div style={{ display: 'flex', width: '100%' }}>\n                    <div className=\"inter-company ic-2\">\n                        <span className=\"smallText\">\n                            Company\n                    </span><br></br>\n                        <span className=\"boldText\">\n                            {interview.company}\n                        </span>\n                    </div>\n                    <div className='inter-placed ic-2'>\n                        <span className=\"smallText\">\n                            Placed/total\n                    </span><br></br>\n                        <span className=\"boldText\">\n                            {this.state.passed && this.state.passed.length + \"/\" + (this.state.failed.length + this.state.passed.length + this.state.onhold.length + this.state.notattemped.length)}\n                        </span>\n                    </div>\n                    <div className=\"inter-date ic-2\">\n                        <span className=\"smallText\">\n                            Date\n                    </span><br></br>\n                        <span className=\"\">\n                            <b>{interview.date}</b>\n                        </span>\n                    </div>\n                </div>\n\n                <div className=\"student-list-interview\" id={\"stud-list-\" + interview._id}>\n                    <center> Students assigned to {interview.company} :</center>\n                    <div className=\"students-already-assigned\">\n                        <table >\n                            <tbody>\n                                {this.state.failed && this.state.failed.map((student, id) => <tr key={id}><td>{student.name}</td><td>{student.college}</td><td>{student.batch}</td><td>\n                                    <select id={\"select-failed-\" + interview._id + student._id} onChange={() => this.handleStatusChange(student._id, interview._id, 'failed')}>\n                                        <option value='passed'>PASSED</option>\n                                        <option value='failed' selected >FAILED</option>\n                                        <option value='not_attempted' >NOT_ATTEMPTED</option>\n                                        <option value='onhold'>ONHOLD</option>\n                                    </select>\n                                </td></tr>)}\n                                {this.state.notattemped && this.state.notattemped.map((student, id) => <tr key={id}><td>{student.name}</td><td>{student.college}</td><td>{student.batch}</td><td>\n                                    <select id={\"select-not_attempted-\" + interview._id + student._id} onChange={() => this.handleStatusChange(student._id, interview._id, 'not_attempted')}>\n                                        <option value='passed'>PASSED</option>\n                                        <option value='failed'>FAILED</option>\n                                        <option value='not_attempted' selected>NOT_ATTEMPTED</option>\n                                        <option value='onhold'>ONHOLD</option>\n                                    </select></td></tr>)}\n                                {this.state.onhold && this.state.onhold.map((student, id) => <tr key={id}><td>{student.name}</td><td>{student.college}</td><td>{student.batch}</td><td>\n                                    <select id={\"select-onhold-\" + interview._id + student._id} onChange={() => this.handleStatusChange(student._id, interview._id, 'onhold')}>\n                                        <option value='passed'>PASSED</option>\n                                        <option value='failed'>FAILED</option>\n                                        <option value='not_attempted'>NOT_ATTEMPTED</option>\n                                        <option value='onhold' selected>ONHOLD</option>\n                                    </select></td></tr>)}\n                                {this.state.passed && this.state.passed.map((student, id) => <tr key={id}><td>{student.name}</td><td>{student.college}</td><td>{student.batch}</td><td>\n                                    <select id={\"select-passed-\" + interview._id + student._id} onChange={() => this.handleStatusChange(student._id, interview._id, 'passed')}>\n                                        <option value='passed' selected>PASSED</option>\n                                        <option value='failed'>FAILED</option>\n                                        <option value='not_attempted'>NOT_ATTEMPTED</option>\n                                        <option value='onhold'>ONHOLD</option>\n                                    </select></td></tr>)}\n                            </tbody>\n                        </table>\n                        <center><button onClick={() => this.showStudentList(interview._id)} className=\"newAssignBtn\" >Assign Students</button></center>\n\n                    </div>\n                    <div className=\"studentListToAssign\" id={'std-list-assign-' + interview._id}>\n                        <table >\n                            <thead>\n                                <tr>\n                                    <th>#</th>\n                                    <th>Name</th>\n                                    <th>College</th>\n                                    <th>Course</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {students.map((student, id) => <tr key={id}><td>{id + 1}</td><td>{student.name}</td><td>{student.college}</td><td>{student.batch}</td><td><button onClick={() => this.assignInt(interview._id, student._id)} >Assign</button></td></tr>)}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default InterviewCard2;"]},"metadata":{},"sourceType":"module"}