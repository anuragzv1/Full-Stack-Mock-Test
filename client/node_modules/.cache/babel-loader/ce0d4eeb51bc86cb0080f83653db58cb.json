{"ast":null,"code":"var _jsxFileName = \"/Users/anuragsingh/Desktop/interbase/client/src/components/App.js\";\nimport React from 'react';\nimport Navbar from './Navbar';\nimport MainContent from './MainContent';\nimport MainContent2 from './MainContent2';\nimport '../assets/css/App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.login = async (username, password) => {\n      const trylogin = await fetch('/login', {\n        method: 'post',\n        body: JSON.stringify({\n          username,\n          password\n        }),\n        headers: {\n          'content-type': 'application/json'\n        }\n      });\n\n      if (trylogin.status === 401) {\n        alert('Invalid username password!');\n      } else {\n        const loginjson = await trylogin.json();\n\n        if (trylogin.isLoggedIn == true) {\n          alert('logged in!');\n        }\n      }\n    };\n\n    this.register = async (username, password, repeatpassword) => {\n      console.log(username, password, repeatpassword);\n\n      if (password !== repeatpassword) {\n        alert('passwords do not match');\n      } else {\n        const tryregister = await fetch('/register', {\n          method: 'post',\n          body: JSON.stringify({\n            username,\n            password\n          }),\n          headers: {\n            'content-type': 'application/json'\n          }\n        });\n        const tryregisterjson = await tryregister.json();\n\n        if (tryregisterjson.message === \"success\") {\n          alert('New registration successfull');\n        } else if (tryregisterjson.message === \"error\") {\n          alert('some error in registering!');\n        }\n      }\n    };\n\n    this.state = {\n      isLoggedIn: false\n    };\n  }\n\n  async componentDidMount() {\n    const login = await fetch('/isAuthenticated', {\n      method: 'post'\n    });\n    const isLoggedInState = await login.json();\n    this.setState({\n      isLoggedIn: isLoggedInState\n    });\n  } //function to login the user\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      isLoggedIn: this.state.isLoggedIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"condition-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, this.state.isLoggedIn && /*#__PURE__*/React.createElement(MainContent2, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 37\n      }\n    }), this.state.isLoggedIn === false && /*#__PURE__*/React.createElement(MainContent, {\n      login: this.login,\n      register: this.register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 47\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/anuragsingh/Desktop/interbase/client/src/components/App.js"],"names":["React","Navbar","MainContent","MainContent2","App","Component","constructor","login","username","password","trylogin","fetch","method","body","JSON","stringify","headers","status","alert","loginjson","json","isLoggedIn","register","repeatpassword","console","log","tryregister","tryregisterjson","message","state","componentDidMount","isLoggedInState","setState","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Navbar from './Navbar';\nimport MainContent from './MainContent';\nimport MainContent2 from './MainContent2';\n\nimport '../assets/css/App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoggedIn: false,\n    }\n  }\n\n  async componentDidMount() {\n    const login = await fetch('/isAuthenticated',{method:'post'});\n    const isLoggedInState = await login.json();\n    this.setState({\n      isLoggedIn: isLoggedInState\n    })\n  }\n\n  //function to login the user\n  login = async (username, password) => {\n    const trylogin = await fetch('/login', {\n      method: 'post',\n      body: JSON.stringify({\n        username,\n        password\n      }),\n      headers: {\n        'content-type': 'application/json'\n      }\n    })\n\n    if (trylogin.status === 401) {\n      alert('Invalid username password!');\n    }\n    else {\n      const loginjson = await trylogin.json();\n      if (trylogin.isLoggedIn == true) {\n        alert('logged in!');\n      }\n    }\n  }\n\n  register = async (username, password, repeatpassword)=>{\n    console.log(username, password, repeatpassword);\n    if (password !== repeatpassword) {\n      alert('passwords do not match');\n    }\n    else {\n      const tryregister = await fetch('/register', {\n        method: 'post',\n        body: JSON.stringify({\n          username,\n          password\n        }),\n        headers: {\n          'content-type': 'application/json'\n        }\n      })\n\n      const tryregisterjson = await tryregister.json();\n      if (tryregisterjson.message === \"success\") {\n        alert('New registration successfull');\n      }\n      else if (tryregisterjson.message === \"error\") {\n        alert('some error in registering!');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar isLoggedIn={this.state.isLoggedIn} />\n        <div className=\"condition-div\">\n          {this.state.isLoggedIn && <MainContent2 />}\n          {this.state.isLoggedIn === false && <MainContent login={this.login} register={this.register} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}